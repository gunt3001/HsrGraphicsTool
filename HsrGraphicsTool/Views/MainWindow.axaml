<Window xmlns="https://github.com/avaloniaui"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:vm="using:HsrGraphicsTool.ViewModels"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:enumUtils="clr-namespace:HsrGraphicsTool.Models.EnumUtils"
        mc:Ignorable="d"
        CanResize="False"
        TransparencyLevelHint="AcrylicBlur" Background="Transparent"
        SizeToContent="WidthAndHeight"
        x:Class="HsrGraphicsTool.Views.MainWindow"
        x:DataType="vm:MainWindowViewModel"
        Icon="/Assets/avalonia-logo.ico"
        Title="HsrGraphicsTool">

    <Design.DataContext>
        <!-- This only sets the DataContext for the previewer in an IDE,
             to set the actual DataContext for runtime, set the DataContext property in code (look at App.axaml.cs) -->
        <vm:MainWindowViewModel />
    </Design.DataContext>

    <Window.Styles>
        <Style Selector="TextBlock.notice">
            <Setter Property="FontFamily" Value="{DynamicResource AppFontFamily}" />
            <Setter Property="Margin" Value="0, 0, 0, 10" />
            <Setter Property="HorizontalAlignment" Value="Center" />
        </Style>
        <Style Selector="TextBlock.header">
            <Setter Property="FontFamily" Value="{DynamicResource AppFontFamily}" />
            <Setter Property="FontWeight" Value="SemiBold" />
            <Setter Property="FontSize" Value="16" />
            <Setter Property="Margin" Value="0, 0, 0, 10" />
        </Style>
        <Style Selector="TextBlock.option-label">
            <Setter Property="FontFamily" Value="{DynamicResource AppFontFamily}" />
            <Setter Property="VerticalAlignment" Value="Center" />
        </Style>
        <Style Selector="TextBox.option-value">
            <Setter Property="FontFamily" Value="{DynamicResource AppFontFamily}" />
        </Style>
        <Style Selector="ComboBox.option-value">
            <Setter Property="FontFamily" Value="{DynamicResource AppFontFamily}" />
            <Setter Property="HorizontalAlignment" Value="Right" />
            <Setter Property="MinWidth" Value="200" />
        </Style>
        <Style Selector="CheckBox.option-value">
            <Setter Property="FontFamily" Value="{DynamicResource AppFontFamily}" />
            <Setter Property="HorizontalAlignment" Value="Right" />
        </Style>
        <Style Selector="Grid.option">
            <Setter Property="Margin" Value="0, 0, 0, 10" />
        </Style>
        <Style Selector="Button.action">
            <Setter Property="FontFamily" Value="{DynamicResource AppFontFamily}" />
            <Setter Property="HorizontalAlignment" Value="Stretch" />
            <Setter Property="HorizontalContentAlignment" Value="Center" />
            <Setter Property="Margin" Value="0, 10, 0, 0" />
        </Style>
    </Window.Styles>

    <Panel>
        <!-- Since default acryllic background is too transparent, add an extra layer of semi-transparent background color -->
        <Panel Background="{DynamicResource SystemControlBackgroundAltHighBrush}"
               Opacity="0.7" IsHitTestVisible="False" />
        <StackPanel Margin="10" IsVisible="{Binding !IsControlsDisabled}">
            <TextBlock Classes="header">Graphics Settings</TextBlock>
            <!-- Resolution options -->
            <Grid Classes="option" ColumnDefinitions="140, 270">
                <TextBlock Classes="option-label">Resolution</TextBlock>
                <StackPanel Grid.Column="1" Orientation="Horizontal" Spacing="8" HorizontalAlignment="Right">
                    <NumericUpDown ShowButtonSpinner="False" Minimum="1" Increment="128" FormatString="0"
                                   Value="{Binding Width}" Width="50" />
                    <TextBlock VerticalAlignment="Center" HorizontalAlignment="Center">x</TextBlock>
                    <NumericUpDown ShowButtonSpinner="False" Minimum="1" Increment="128" FormatString="0"
                                   Value="{Binding Height}" Width="50" />
                    <CheckBox IsChecked="{Binding IsFullscreen}">Full screen</CheckBox>
                </StackPanel>
            </Grid>
            <Grid Classes="option" ColumnDefinitions="140, 270">
                <TextBlock Classes="option-label">Graphics quality</TextBlock>
                <ComboBox Grid.Column="1" SelectedIndex="0" Classes="option-value"
                          ItemsSource="{Binding GraphicsPresetOptions, 
                            Converter={enumUtils:EnumCollectionConverter}}"
                          SelectedItem="{Binding GraphicsPreset, 
                            Converter={enumUtils:EnumValueConverter}}" />
            </Grid>
            <Grid Classes="option" ColumnDefinitions="140, 270">
                <TextBlock Classes="option-label">FPS</TextBlock>
                <ComboBox Grid.Column="1" Classes="option-value"
                          ItemsSource="{Binding FpsOptions}"
                          SelectedItem="{Binding Fps}" />
            </Grid>
            <Grid Classes="option" ColumnDefinitions="140, 270">
                <TextBlock Classes="option-label">V-Sync</TextBlock>
                <CheckBox Grid.Column="1" Classes="option-value"
                          IsChecked="{Binding IsVsyncEnabled}">
                    Enabled
                </CheckBox>
            </Grid>
            <Grid Classes="option" ColumnDefinitions="140, 270">
                <TextBlock Classes="option-label">Rendering quality</TextBlock>
                <ComboBox Grid.Column="1" SelectedIndex="0" Classes="option-value"
                          ItemsSource="{Binding RenderingQualityOptions}"
                          SelectedItem="{Binding RenderingQuality}" />
            </Grid>
            <Grid Classes="option" ColumnDefinitions="140, 270">
                <TextBlock Classes="option-label">Shadow quality</TextBlock>
                <ComboBox Grid.Column="1" SelectedIndex="0" Classes="option-value"
                          ItemsSource="{Binding ShadowQualityOptions, Converter={enumUtils:EnumCollectionConverter}}"
                          SelectedItem="{Binding ShadowQuality, Converter={enumUtils:EnumValueConverter}}" />
            </Grid>
            <Grid Classes="option" ColumnDefinitions="140, 270">
                <TextBlock Classes="option-label">Reflection quality</TextBlock>
                <ComboBox Grid.Column="1" SelectedIndex="0" Classes="option-value"
                          ItemsSource="{Binding ReflectionQualityOptions, Converter={enumUtils:EnumCollectionConverter}}"
                          SelectedItem="{Binding ReflectionQuality, Converter={enumUtils:EnumValueConverter}}" />
            </Grid>
            <Grid Classes="option" ColumnDefinitions="140, 270">
                <TextBlock Classes="option-label">Character quality</TextBlock>
                <ComboBox Grid.Column="1" SelectedIndex="0" Classes="option-value"
                          ItemsSource="{Binding CharacterQualityOptions, Converter={enumUtils:EnumCollectionConverter}}"
                          SelectedItem="{Binding CharacterQuality, Converter={enumUtils:EnumValueConverter}}" />
            </Grid>
            <Grid Classes="option" ColumnDefinitions="140, 270">
                <TextBlock Classes="option-label">Environment detail</TextBlock>
                <ComboBox Grid.Column="1" SelectedIndex="0" Classes="option-value"
                          ItemsSource="{Binding EnvironmentDetailOptions, Converter={enumUtils:EnumCollectionConverter}}"
                          SelectedItem="{Binding EnvironmentDetail, Converter={enumUtils:EnumValueConverter}}" />
            </Grid>
            <Grid Classes="option" ColumnDefinitions="140, 270">
                <TextBlock Classes="option-label">Special effects quality</TextBlock>
                <ComboBox Grid.Column="1" SelectedIndex="0" Classes="option-value"
                          ItemsSource="{Binding SpecialEffectsQualityOptions, Converter={enumUtils:EnumCollectionConverter}}"
                          SelectedItem="{Binding SpecialEffectsQuality, Converter={enumUtils:EnumValueConverter}}" />
            </Grid>
            <Grid Classes="option" ColumnDefinitions="140, 270">
                <TextBlock Classes="option-label">Bloom effect</TextBlock>
                <ComboBox Grid.Column="1" SelectedIndex="0" Classes="option-value"
                          ItemsSource="{Binding BloomEffectOptions, Converter={enumUtils:EnumCollectionConverter}}"
                          SelectedItem="{Binding BloomEffect, Converter={enumUtils:EnumValueConverter}}" />
            </Grid>
            <Grid Classes="option" ColumnDefinitions="140, 270">
                <TextBlock Classes="option-label">Anti-aliasing</TextBlock>
                <ComboBox Grid.Column="1" SelectedIndex="0" Classes="option-value"
                          ItemsSource="{Binding AntiAliasingOptions, Converter={enumUtils:EnumCollectionConverter}}"
                          SelectedItem="{Binding AntiAliasing, Converter={enumUtils:EnumValueConverter}}" />
            </Grid>
            <Grid Classes="option" ColumnDefinitions="140, 270">
                <TextBlock Classes="option-label">Light quality</TextBlock>
                <ComboBox Grid.Column="1" SelectedIndex="0" Classes="option-value"
                          ItemsSource="{Binding LightQualityOptions, Converter={enumUtils:EnumCollectionConverter}}"
                          SelectedItem="{Binding LightQuality, Converter={enumUtils:EnumValueConverter}}" />
            </Grid>
            <TextBlock Text="{Binding StatusMessage}"
                       Foreground="Green"
                       FontFamily="{DynamicResource AppFontFamily}" />
            <Grid ColumnDefinitions="*,8, *">
                <!-- 'accent' is a built-in style that applies the primary button color -->
                <!-- ReSharper disable once Xaml.StyleClassNotFound -->
                <Button Classes="accent action" Command="{Binding ApplyChanges}">Apply settings</Button>
                <Button Grid.Column="2" Classes="action" Command="{Binding DiscardChanges}">Discard changes</Button>
            </Grid>
        </StackPanel>
        <StackPanel Margin="10" VerticalAlignment="Center" IsVisible="{Binding IsControlsDisabled}">
            <TextBlock Classes="notice">
                Unable to read the current graphics settings from the registry.
            </TextBlock>
            <TextBlock Classes="notice">
                Have you tried running the game at least once?
            </TextBlock>
            <Button Classes="action">Exit</Button>
        </StackPanel>
    </Panel>

</Window>